services:
  postgres:
    image: postgres:14
    container_name: postgresIntuitive
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: IntuitiveDockerDb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_intuitive:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d IntuitiveDockerDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redisIntuitive
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    container_name: intuitive
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresIntuitive:5432/IntuitiveDockerDb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_CACHE_TYPE: redis
      SPRING_REDIS_HOST: redisIntuitive
      SPRING_REDIS_PORT: 6379
    ports:
      - "8080:8080"

volumes:
  postgres_data_intuitive:

